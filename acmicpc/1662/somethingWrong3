package main

import (
    "bufio"
    "os"
    // "strconv"
    "fmt"
)

var sc *bufio.Scanner = bufio.NewScanner(os.Stdin)
type result struct {
    count, idx int
}

func main() {
    wt := bufio.NewWriter(os.Stdout)
    defer wt.Flush()
    sc.Scan()
    S := sc.Bytes()

    fmt.Println(Recursive(S))
    fmt.Println(S)
}
func Recursive(S []byte) (int){
    count := 0
    for {
        switch {
        case len(S) == 0 :
            return count
        case S[0] == ')':
            S = S[1:]
            return count
        case len(S) > 1 && S[1] == '(':
            k := int(S[0]) - '0'
            S = S[2:]
            count += k * Recursive(S)
        default:
            S = S[1:]
            count++
        }
    }
}
